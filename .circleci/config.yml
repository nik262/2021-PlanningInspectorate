## Use the latest 2.1 version of CircleCI pipeline process engine.
## See: https://circleci.com/docs/2.0/configuration-reference
#version: 2.1
#
#
#jobs:
#  build:
#    docker:
#      # specify the version you desire here
#      - image: cimg/openjdk:11.0
#
#      # Specify service dependencies here if necessary
#      # CircleCI maintains a library of pre-built images
#      # documented at https://circleci.com/docs/2.0/circleci-images/
#      - image: circleci/postgres:9.4
#        auth:
#          username: imranzaminali
#          password: dockerpass  # context / project UI env-var reference
#          environment:
#            POSTGRES_USER: postgres
#
#    working_directory: ~/2021-PlanningInspectorate
#
##    environment:
##      # Customize the JVM maximum heap limit
##      JVM_OPTS: -Xmx3200m
##      TERM: dumb
#
#    steps:
#      - checkout:
#          path: ~/2021-PlanningInspectorate
#
#
#      # run tests!
#      - run: mvn test
#
#
#workflows:
#  test_all:
#    jobs:
#      - build

version: 2.1
jobs:
  build:

    # Primary container image where all commands run

    docker:
      - image: cimg/openjdk:11.0
        auth:
          username: imranzaminali
          password: dockerpass  # context / project UI env-var reference
        environment:
          TEST_DATABASE_URL: postgresql://root@localhost/circle_test

      # Service container image

      - image: cimg/postgres:9.4
        auth:
          username: imranzaminali
          password: dockerpass  # context / project UI env-var reference

    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install postgresql-client-12
      - run: whoami
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "CREATE TABLE test (name char(25));"
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "INSERT INTO test VALUES ('John'), ('Joanna'), ('Jennifer');"
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "SELECT * from test"
      - run: mvn test

workflows:
  test_all:
    jobs:
      - build
